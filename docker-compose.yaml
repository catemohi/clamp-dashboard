version: '3'
services:
  app:
    build:
      dockerfile: Dockerfile.app
      context: .

  db:
    image: postgres
    container_name: dashboard_postgress
    restart: always
    user: "${UID}:${GID}"
    env_file:
      - .env.db
    volumes:
      - .:/var/lib/postgresql/data
    expose:
      - 5432

  redis:
    container_name: dashboard_redis    
    image: redis
    depends_on:
      - db
    restart: always

  webapp:
    container_name: dashboard_webapp
    depends_on:
      - db
      - app
    restart: always
    volumes:
      - .static:/static
      - .media:/media
    env_file:
      - .env
    image: clamp-dashboard-app
    expose:
      - 8000
      - 8001
    command: >
      sh -c "python manage.py makemigrations --noinput &&
             python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput &&
             (python manage.py createsuperuser --noinput --username $DJANGO_SUPERUSER_USERNAME --email test@test.ru || echo $DJANGO_SUPERUSER_USERNAME exist);
             daphne -b 0.0.0.0 -p 8001 clamp.asgi:application & gunicorn --bind 0.0.0.0:8000 clamp.wsgi:application"

  celery_worker:
    container_name: celery_worker
    restart: always
    depends_on:
      - webapp
      - app
    volumes:
      - .static:/static
      - .media:/media
    env_file:
      - .env
    image: clamp-dashboard-app
    command: >
      sh -c "celery -A clamp worker -l info -c 1 -Q naumen_crud &&
             celery -A clamp worker -l info -c 10 -Q celery"

  celery_beat:
    container_name: celery_beat
    depends_on:
      - webapp
      - app
    restart: always
    volumes:
      - .static:/static
      - .media:/media
    env_file:
      - .env
    image: clamp-dashboard-app
    command: >
      sh -c "celery -A clamp beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"

  telegram:
    container_name: telegram_bot
    depends_on:
      - webapp
      - app
    restart: always
    volumes:
      - .static:/static
      - .media:/media
    env_file:
      - .env
    image: clamp-dashboard-app
    command: [ "python", "manage.py", "bot"]

  nginx:
    container_name: dashboard_nginx
    build: ./nginx
    volumes:
      - .static:/static
      - .media:/media
    ports:
      - "80:80"
    depends_on:
      - webapp
